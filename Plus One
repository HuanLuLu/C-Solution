time complexity: O(n) //max: 2n
space complexity: O(n)  //return n or n+1 

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* plusOne(int* digits, int digitsSize, int* returnSize){
	int carry = 1,sum;
	int *ret = (int *)malloc( sizeof(int) * (digitsSize+1) );
	for(int i=digitsSize-1; i>=0; i--) {
		sum = digits[i] + carry;
		ret[i] = sum%10;
		carry = sum/10;
	}

	if (carry > 0) {
		*returnSize = digitsSize+1;
		for(int i=*returnSize-1; i>0; i--) {
			ret[i] = ret[i-1];
		}
		ret[0] = carry;
	}
	else
	{
		*returnSize = 	digitsSize;
	}
	return ret;
}
