

/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
void fillColor(int** image, int rowSize, int colSize, int sr, int sc, int color, int old_color){
	if(image[sr][sc] != old_color || old_color == color) {return;}
	image[sr][sc] = color;

	if(sr > 0) {fillColor(image, rowSize, colSize, sr-1, sc, color, old_color);}
	if(sr < rowSize-1) {fillColor(image, rowSize, colSize, sr+1, sc, color, old_color);}
	if(sc > 0) {fillColor(image, rowSize, colSize, sr, sc-1, color, old_color);}
	if(sc < colSize-1) {fillColor(image, rowSize, colSize, sr, sc+1, color, old_color);}
	return;
}

int** floodFill(int** image, int imageSize, int* imageColSize, int sr, int sc, int color, int* returnSize, int** returnColumnSizes){
    	*returnSize = imageSize;
	*returnColumnSizes = (int *)malloc(sizeof(int) * imageSize);
	for(int i = 0; i < imageSize; i++) {
		(*returnColumnSizes)[i] = imageColSize[i];
	}
	
	fillColor(image, imageSize, imageColSize[0], sr, sc, color, image[sr][sc]);
	return image;
}
