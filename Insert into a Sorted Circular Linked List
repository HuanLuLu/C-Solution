/**
 * Definition for a Node.
 * struct Node {
 *     int val;
 *     struct TreeNode *next;
 * };
 */
void insertBetween(struct Node *prev, struct Node *curr, struct Node *node) {
	prev->next = node;
	node->next = curr;
	return;
}


struct Node* insert(struct Node* head, int insertVal) {
    struct Node *node = (struct Node *)malloc(sizeof(struct Node));
	node->val = insertVal;

	if (head==NULL) {
		node->next = node;
		return node;
	}

	struct Node *prev = head;
	struct Node *curr = head->next;
	int currVal, prevVal;

	while (curr != head) {
		currVal = curr->val;
		prevVal = prev->val;

		if (prevVal > currVal) {
			if ((insertVal <= currVal) || (insertVal > prevVal)) {
				insertBetween(prev, curr, node);
				return head;
			}
		}
		else {
			if ((prevVal < insertVal) && (insertVal <= currVal)) {
				insertBetween(prev, curr, node);
				return head;
			}
		}
        
        prev = prev->next;
        curr = curr->next;
	}

	insertBetween(prev, curr, node);
	return head;

}
