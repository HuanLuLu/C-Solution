O(n)
O(n)

#define TWO_CHARS_TO_NUM(a,b)  ( ((int)a - (int)'0') * 10 +  ((int)b - (int)'0') )

int numDecodings(char * s){
	if (s[0] == '0') {return 0;}
	if (strlen(s) == 1) {return 1;}

	int num;
	int dp[strlen(s)];

	dp[0] = 1;	
	num = TWO_CHARS_TO_NUM(s[0], s[1]);
    dp[1] = 0;
    if (s[1] != '0') {dp[1] += 1;}
	if (num <= 26) {dp[1] += 1;}
    
        
	for (int i = 2; i < strlen(s); i++) {
		dp[i] = 0;
		if (s[i] != '0') {
            dp[i] += dp[i-1];
        }
		num = TWO_CHARS_TO_NUM(s[i-1], s[i]);
		if (num != 0 && s[i-1] != '0' && num <= 26) {
			dp[i] += dp[i-2];
		}
		if (dp[i] == 0) {return 0;}
	} 
	return dp[strlen(s)-1];
}
