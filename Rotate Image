two ways to do it:
1) iterate elements
2) swap diagnolly then reverse each row

Both time complexity are O(n*n), space O(1)

Method1:
void rotate(int** matrix, int matrixSize, int* matrixColSize){
	int size = matrixSize;
	int temp;
	for (int i = 0; i < (size + 1) / 2; i++) {
		for (int j = i; j < size - i - 1; j++) {
			temp = matrix[i][j];
			matrix[i][j] = matrix[size-1-j][i];
			matrix[size-1-j][i] = matrix[size-1-i][size-1-j];
			matrix[size-1-i][size-1-j] = matrix[j][size-1-i];
			matrix[j][size-1-i] = temp;
		}
	}
	return;
}

Method 2:
void rotate(int** matrix, int matrixSize, int* matrixColSize){
	int size = matrixSize;
	int temp;

	//flip diagonally
	for (int i = 0; i < size - 1; i++) {
		for (int j = i+1; j < size; j++) {
			temp = matrix[i][j];
			matrix[i][j] = matrix[j][i];
			matrix[j][i] = temp;
		}
	}	

	//reverse the row
	int start, rear;
	for (int i = 0; i < size; i++) {
		start = 0; rear = size - 1;
		while(start < rear) {
			temp = matrix[i][start];
			matrix[i][start] = matrix[i][rear];
			matrix[i][rear] = temp;
			start++; rear--;
		}
	}

	return;
}
